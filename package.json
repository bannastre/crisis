{
  "name": "crisis",
  "version": "0.0.1",
  "description": "Crisis Microservice",
  "main": "dist/server.js",
  "private": true,
  "engines": {
    "node": ">12.0"
  },
  "scripts": {
    "start": "node dist/server.js",
    "dev": "concurrently -k \"npm run build:watch\" \"npm run start:dev\"",
    "build": "./node_modules/.bin/tsc --build tsconfig.json && echo done",
    "build:watch": "./node_modules/.bin/tsc --build tsconfig.json -w",
    "start:dev": "nodemon --inspect=0.0.0.0:9229 dist/server.js",
    "copy-definitions": "cp -r ./definitions ./dist",
    "test": "npm run build && npm run test:feature",
    "test:feature": "ENV=test cucumber-js 'test/**/**/*.feature' -r './dist/test/**/*.steps.js' --require ./dist/test/*.steps.js --require-module ts-node/register --exit",
    "test:cov": "rm -rf ./coverage && ENV=test ./node_modules/.bin/nyc npm t",
    "typeorm:cli": "ts-node ./node_modules/typeorm/cli -f ./ormconfig.js",
    "db:migrate": "npm run typeorm:cli migration:run",
    "db:migrate:revert": "npm run typeorm:cli migration:revert",
    "db:sync": "npm run build && npm run typeorm:cli schema:sync",
    "db:drop": "npm run typeorm:cli schema:drop",
    "docker:up": "docker-compose up --build --force-recreate",
    "docker:down": "docker-compose down --remove-orphans -v",
    "docker:build": "docker build -t crisis:0.0.1 .",
    "docker:run": "docker run -d -p 3000:3000 crisis:0.0.1",
    "docker:deploy": "docker build . -t crisis && docker tag crisis capcovacr.azurecr.io/crisis && docker push capcovacr.azurecr.io/crisis"
  },
  "dependencies": {
    "axios": "^0.19.2",
    "cookie-parser": "~1.4.5",
    "cors": "^2.8.5",
    "debug": "~4.1.1",
    "dotenv": "^8.2.0",
    "express": "4.17.1",
    "express-jwt": "^5.3.1",
    "express-openapi-validator": "^3.10.0",
    "helmet": "^3.22.0",
    "libphonenumber-js": "^1.7.49",
    "lodash": "^4.17.15",
    "moment": "^2.24.0",
    "morgan": "~1.10.0",
    "mssql": "^6.2.0",
    "nodemon": "^2.0.2",
    "phone": "^2.4.8",
    "promisify": "0.0.3",
    "reflect-metadata": "^0.1.13",
    "supertest": "^4.0.2",
    "typeorm": "^0.2.24",
    "typescript-tslint-plugin": "^0.5.5"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@types/chai": "^4.2.11",
    "@types/cookie-parser": "^1.4.2",
    "@types/cors": "^2.8.6",
    "@types/cucumber": "^6.0.1",
    "@types/express": "4.17.4",
    "@types/http-errors": "^1.6.3",
    "@types/lodash": "^4.14.149",
    "@types/moment-timezone": "^0.5.13",
    "@types/morgan": "^1.9.0",
    "@types/multer": "^1.4.2",
    "@types/node": "^13.9.8",
    "@types/phone": "^2.4.0",
    "@types/request-promise": "^4.1.46",
    "@types/sinon-express-mock": "^1.3.8",
    "@types/supertest": "^2.0.8",
    "@types/uuid": "^7.0.2",
    "babel-eslint": "^10.1.0",
    "chai": "^4.2.0",
    "commander": "^5.0.0",
    "concurrently": "^5.1.0",
    "cucumber": "^6.0.5",
    "eslint": "^6.8.0",
    "eslint-config-airbnb-base": "^14.1.0",
    "eslint-config-prettier": "^6.10.1",
    "eslint-plugin-cucumber": "1.4.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-json": "2.1.1",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.2",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-sonarjs": "^0.5.0",
    "eslint-plugin-unicorn": "^18.0.1",
    "husky": "^4.2.3",
    "moment-timezone": "^0.5.35",
    "nock": "^12.0.3",
    "nyc": "^15.0.0",
    "prettier": "^2.0.2",
    "request-promise": "^4.2.5",
    "sinon": "^9.0.1",
    "sinon-chai": "^3.5.0",
    "sinon-express-mock": "^2.2.1",
    "ts-node": "^8.8.1",
    "ts-sinon": "^1.0.25",
    "tslint": "^6.1.0",
    "typescript": "3.8.3",
    "uuid": "^7.0.3"
  },
  "repository": {
    "type": "git",
    "url": "to follow"
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "clean": true,
    "cache": true,
    "reporter": [
      "text-summary",
      "html"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run build",
      "pre-push": "npm test",
      "...": "..."
    }
  },
  "author": "Jigsaw XYZ",
  "license": "ISC"
}
